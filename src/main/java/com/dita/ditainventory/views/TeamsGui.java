package com.dita.ditainventory.views;

import com.dita.ditainventory.models.Team;
import java.util.ArrayList;
import java.util.List;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import org.apache.commons.lang3.StringUtils;

public class TeamsGui extends javax.swing.JFrame
{
    private static DefaultListModel model;
    private static List<Team> internalModel;
    
    /**
     * Creates new form TeamsGui
     */
    public TeamsGui()
    {
        initComponents();
        this.setLocationRelativeTo(null);
        model = new DefaultListModel();
        internalModel = new ArrayList<>();
        teamsLst.setModel(model);
        loadTeams();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        jScrollPane1 = new javax.swing.JScrollPane();
        teamsLst = new javax.swing.JList();
        addBtn = new javax.swing.JButton();
        deleteBtn = new javax.swing.JButton();
        editBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Teams");
        setName("teamsFrm"); // NOI18N
        setResizable(false);

        teamsLst.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(teamsLst);

        addBtn.setText("Add");
        addBtn.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                addBtnActionPerformed(evt);
            }
        });

        deleteBtn.setText("Delete");
        deleteBtn.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                deleteBtnActionPerformed(evt);
            }
        });

        editBtn.setText("Edit");
        editBtn.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                editBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(addBtn)
                    .addComponent(editBtn)
                    .addComponent(deleteBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {addBtn, deleteBtn, editBtn});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 218, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(addBtn)
                        .addGap(5, 5, 5)
                        .addComponent(editBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(deleteBtn)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addBtnActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_addBtnActionPerformed
    {//GEN-HEADEREND:event_addBtnActionPerformed
        String reply = JOptionPane.showInputDialog("Enter team name:");
        
        if(StringUtils.isEmpty(reply))
        {
            return;
        }
        
        Team team = new Team(reply);
        
        for(Team t: internalModel)
        {
            if(t.getName().equals(team.getName()))
            {
                return;
            }
        }
                
        internalModel.add(team);
        model.addElement(team.getName());
        team.save();
    }//GEN-LAST:event_addBtnActionPerformed

    private void deleteBtnActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_deleteBtnActionPerformed
    {//GEN-HEADEREND:event_deleteBtnActionPerformed
        int index = teamsLst.getSelectedIndex();
        
        if(index != -1)
        {
            internalModel.get(index).delete();
            internalModel.remove(index);
            model.remove(index);
        }
        
    }//GEN-LAST:event_deleteBtnActionPerformed

    private void editBtnActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_editBtnActionPerformed
    {//GEN-HEADEREND:event_editBtnActionPerformed
        int index = teamsLst.getSelectedIndex();
        if(index == -1)
        {
            return;
        }
        
        String reply = JOptionPane.showInputDialog("Enter team name:", model.get(index));
        
        if(StringUtils.isEmpty(reply))
        {
            return;
        }
        
        for(int i = 0;i < internalModel.size();i++)
        {
            if(i == index)
            {
                continue;
            }
            
            if(internalModel.get(i).getName().equals(reply))
            {
                return;
            }
        }
        
        internalModel.get(index).setName(reply);
        internalModel.get(index).save();
        model.set(index, reply);
    }//GEN-LAST:event_editBtnActionPerformed

    private void loadTeams()
    {
        List teams = Team.read();
        System.out.println(teams);
        
        for(Object team: teams)
        {
            Team temp = (Team) team;
            internalModel.add(temp);
            model.addElement(temp.getName());
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addBtn;
    private javax.swing.JButton deleteBtn;
    private javax.swing.JButton editBtn;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JList teamsLst;
    // End of variables declaration//GEN-END:variables
}
